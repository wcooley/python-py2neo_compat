[tox]
envlist = cov-init, py3-py2neo1, py3-py2neo2, py27-py2neo1, cov-report
# TODO: py3-py2neo3
tox_pip_extensions_ext_venv_update = true

[travis]
python =
    3.6: py3
    2.7: py27

[testenv]
setenv =
    COVERAGE_FILE = .coverage.{envname}
    NEO4J_URI = {env:NEO4J_URI:http://localhost:7474/db/data/}
    py2neo3: PY2NEO_MAX_VERSION = 3
passenv = HOME PIP_* COVERAGE_* PYTHON*
deps =
    py2neo1: py2neo ~= 1.6
    py2neo2: py2neo ~= 2.0
    py2neo3: py2neo ~= 3.0
    pytest-randomly
    setuptools_scm
extras = test
; pytest-{forked,xdist} results in INTERNALERROR for pytest when run under
; PyCharm with its customized tox/pytest test runners. As a workaround,
; set the PYCHARM_NO_FORK environment variable (with no value) in the
; Run Configuration, which will cause the {env} below to expand to nothing.
; The tests will still run with forking outside of PyCharm, because we
; want to test in as much isolation as possible.
commands =
    py.test \
        --basetemp={envtmpdir} \
        {env:PYCHARM_NO_FORK:--forked} \
        --cov \
        --cov-config={toxinidir}/.coveragerc \
        --cov-report= \
        --junit-xml={toxinidir}/junit-{envname}.xml \
        --junit-prefix={envname} \
        {posargs}
    ; Instead of pytest-cov's term reporting, use coverage.py's so we can
    ; combine paths -- otherwise the report is split between the installed
    ; dist files and src files
    ; and for some reason, `combine` ignores the COVERAGE_FILE env var
    - coverage combine {env:COVERAGE_FILE:.coverage.{envname}}
    coverage report

[testenv:util]
description = No-op env that defines the shared utility venv
envdir = {toxworkdir}/util
deps =
    flake8
    coverage
    mypy
skip_install = True
commands =

[testenv:flake8]
envdir = {[testenv:util]envdir}
deps = {[testenv:util]deps}
skip_install = True
commands =
    flake8 src tests

[testenv:cov-init]
envdir = {[testenv:util]envdir}
deps = {[testenv:util]deps}
skip_install = True
setenv =
    COVERAGE_FILE = .coverage
commands =
    coverage erase

[testenv:cov-report]
envdir = {[testenv:util]envdir}
deps = {[testenv:util]deps}
skip_install = True
ignore_outcome = True
setenv =
    COVERAGE_FILE = .coverage
commands =
    - coverage combine
    coverage report
    coverage html
