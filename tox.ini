[tox]
envlist = cov-init, py36-py2neo_2, py38-py2neo_2021, cov-report
tox_pip_extensions_ext_venv_update = true
;minversion = 4.0
;requires =
;    tox >= 4
;    virtualenv<20.22.0
;    pip == 21.3.1
;    setuptools == 59.6.0
;    wheel == 0.37.1
;    setuptools-scm ~= 6.4
;    virtualenv-pyenv


[travis]
python =
    3.6: py3

[testenv]
base_python =
    py3: python3.8
package = editable-legacy
setenv =
    COVERAGE_FILE = .coverage.{envname}
    NEO4J_URI = {env:NEO4J_URI:http://localhost:7474/db/data/}
passenv =
    HOME
    PIP_*
    COVERAGE_*
    PYTHON*
deps =
    py2neo_2: py2neo-history ~= 2.0
    py2neo_2021: py2neo ~= 2021.2.4
    pytest-randomly
    setuptools_scm
extras =
    test
    py2neo_2: py2neo2
    py2neo_2021: py2neo2021
allowlist_externals =
    cd
    patch
commands_pre =
    py2neo_2: cd {envsitepackagesdir} && patch -p2 < {toxinidir}/py2neo-2.0.9.patch
; pytest-{forked,xdist} results in INTERNALERROR for pytest when run under
; PyCharm with its customized tox/pytest test runners. As a workaround,
; set the PYCHARM_NO_FORK environment variable (with no value) in the
; Run Configuration, which will cause the {env} below to expand to nothing.
; The tests will still run with forking outside of PyCharm, because we
; want to test in as much isolation as possible.
commands =
    pytest \
        --basetemp={envtmpdir} \
        {env:PYCHARM_NO_FORK:--forked} \
        --cov \
        --cov-config={toxinidir}/.coveragerc \
        --cov-report= \
        --junit-xml={toxinidir}/junit-{envname}.xml \
        --junit-prefix={envname} \
        {posargs}
    ; Instead of pytest-cov's term reporting, use coverage.py's so we can
    ; combine paths -- otherwise the report is split between the installed
    ; dist files and src files
    ; and for some reason, `combine` ignores the COVERAGE_FILE env var
    - coverage combine {env:COVERAGE_FILE:.coverage.{envname}}
    coverage report

[testenv:util]
description = No-op env that defines the shared utility venv
envdir = {toxworkdir}/util
deps =
    coverage
skip_install = True
commands =

[testenv:cov-init]
envdir = {[testenv:util]envdir}
deps = {[testenv:util]deps}
skip_install = True
setenv =
    COVERAGE_FILE = .coverage
commands =
    coverage erase

[testenv:cov-report]
envdir = {[testenv:util]envdir}
deps = {[testenv:util]deps}
skip_install = True
ignore_outcome = True
setenv =
    COVERAGE_FILE = .coverage
commands =
    - coverage combine
    coverage report
    coverage html
